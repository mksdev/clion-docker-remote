# CLion remote docker environment (How to build docker container, run and stop it)
#
# Build and run:
#   docker build -t clion/remote-cpp-env:0.5 -f Dockerfile.remote-cpp-env .
#   docker run -d --cap-add sys_ptrace -p127.0.0.1:2222:22 --name clion-remote clion/remote-cpp-env:0.5
#   ssh-keygen -f "$HOME/.ssh/known_hosts" -R "[localhost]:2222"
#
# stop:
#   docker stop clion-remote
# 
# ssh credentials (test user):
#   user@password 

FROM ubuntu:20.04

ENV TZ=Europe/Prague
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN apt-get update

# essential libraries for Development
RUN apt-get install -y \
      ssh \
      sudo \
      build-essential \
      tzdata \
      gcc \
      g++ \
      gdb \
      make \
      clang \
      cmake \
      rsync \
      tar \
      python \
      libc6-dev \
      nano \
      vim \
      git

# custom libraries for given project
RUN apt-get install -y \
      libfmt-dev \
      libevent-dev \
      libcurl4-openssl-dev \
      libpcap-dev \
      libc-ares-dev \
      libboost-all-dev \
      libssl-dev \

RUN apt-get clean

# setup password for root
RUN echo 'root:root' | chpasswd

RUN ( \
    echo 'LogLevel DEBUG2'; \
    echo 'PermitRootLogin yes'; \
    echo 'PasswordAuthentication yes'; \
    echo 'Subsystem sftp /usr/lib/openssh/sftp-server'; \
  ) > /etc/ssh/sshd_config_test_clion \
  && mkdir /run/sshd

# user with name "user", password "pass"
RUN useradd -m user && yes pass | passwd user

CMD ["/usr/sbin/sshd", "-D", "-e", "-f", "/etc/ssh/sshd_config_test_clion"]
